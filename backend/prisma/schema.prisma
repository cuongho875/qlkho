// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model Product {
  productId  Int    @id @default(autoincrement())
  name  String @db.VarChar(100)
  description String 
  price Decimal @db.Decimal(10,2) @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt  
  // inventory Inventory?
  quantity Int @default(0)
  orderDetails OrderDetail[] @ignore
}

// model Inventory {
//   id Int @id @default(autoincrement())
//   product Product @relation(fields: [productId],references: [productId])
//   productId Int @unique
//   quantity Int
// }

model Supplier {
  id Int @id @default(autoincrement())
  name String @db.VarChar(100)
  contactInfo String
  createdAt DateTime @default(now())
}

model Customer {
  id Int @id @default(autoincrement())
  name String @db.VarChar(100)
  contactInfo String
  createdAt DateTime @default(now())
  orders Order[]
}
model Order {
  id Int @id @default(autoincrement())
  customer Customer @relation(fields: [customerId], references: [id])
  customerId Int
  orderDetails OrderDetail[]
  orderDate DateTime @default(now())
}

model OrderDetail {
  id Int @id @default(autoincrement())
  order Order @relation(fields: [orderId],references: [id])
  orderId Int 
  product Product  @relation(fields: [productId],references: [productId])
  productId Int 
  quantity Int
  price Decimal @db.Decimal(10,2)
}